#Approach 2 T.c -> O(n) , S.c -> O(1)

class Solution {
public:
    int climbStairs(int n) {
        if(n == 1) return 1;
        int prev1 = 2 , prev2 = 1 , curr = 2;
        for(int i = 3; i <= n; i++) {
            curr = prev1+prev2;
            prev2 = prev1;
            prev1 = curr;
        }

        return curr;
    }
};

#Approach 1 T.c -> O(n) , S.c -> O(n)

class Solution {
public:
    int climbStairs(int n) {
        if(n == 1) return 1;
        vector<int> dp(n+1);
        dp[1] = 1;
        dp[2] = 2;

        for(int i = 3; i <= n; i++) dp[i] = dp[i-1] + dp[i-2];
        return dp[n];
    }
};
