# Approach 2 [slow & fast ptr]
T.c -> O(n) , S.c -> O(1)

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast && fast -> next){
            slow = slow -> next;
            fast = fast -> next -> next;
        }

        return slow;
    }
};

# Approach 1 
T.c -> O(2*n) , S.c -> O(1)

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        ListNode* temp = head;
        int cnt = 0;
        while(temp){
            cnt++;
            temp = temp -> next;
        }

        cnt = cnt/2;
        temp = head;
        while(cnt--) temp = temp -> next;
        return temp;
    }
};
