class cmp {
public:
    bool operator()(pair<int,int> a,pair<int,int> b){
        return a.first > b.first;
    }
};

class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        int i = 0;
        vector<int> ans,mp(20001);
        for(auto it : nums) mp[it+10000]++;
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp> pq;

        while(pq.size() < k) {
            if(mp[i] != 0) pq.push({mp[i],i-10000});
            i++; 
        }

        while(i < mp.size()){
            pair<int,int> top = pq.top();pq.pop();
            if(mp[i] > mp[top.second+10000]) top = {mp[i],i-10000};
            pq.push(top);
            i++;
        }

        while(!pq.empty()){
            ans.push_back(pq.top().second);
            pq.pop();
        }

        return ans;
    }
};
